# -*- coding: utf-8 -*-
"""Zomato Dataset EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vl1wEe5Wo4T3qNjIRWoEw1vE_CwQgrql

#Zomato Dataset EDA
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

# %matplotlib inline
pd.set_option('display.max_columns', None)

df = pd.read_csv("zomato.csv", encoding='latin-1')

df.head()

df.columns

df.info()

df.describe()

##Missing Values
df.isnull().sum()

[feature for feature in df.columns if df[feature].isnull().sum()>0]

plt.figure(figsize=(14, 6))
sns.heatmap(df.isnull(), yticklabels=False, cbar=False, )

df_country = pd.read_excel('Country-Code.xlsx')
df_country

df.columns

final_df = pd.merge(df, df_country, how="left", on='Country Code')
final_df.head()

final_df.dtypes

final_df.Country.value_counts()

country_names = final_df.Country.value_counts().index

country_values = final_df.Country.value_counts().values

##Plot Pie Chart of top three countries
plt.pie(country_values[:3], labels=country_names[:3], autopct='%.2f%%')

"""Observations: Zomato Maximum records and transactions are from India then USA then UK"""

final_df.columns

ratings = final_df.groupby(['Aggregate rating', 'Rating color', 'Rating text']).size().reset_index().rename(columns={0:"Rating Count"})

ratings

## Observation
plt.figure(figsize=(12, 6))
sns.barplot(x='Aggregate rating', y='Rating Count',data=ratings )

## Observation
plt.figure(figsize=(12, 6))
sns.barplot(x='Aggregate rating', y='Rating Count', hue = 'Rating color',data=ratings, palette=['silver','red','orange','yellow', 'green', 'green'], width=0.8 )

"""Observation:

1- not rated are too high 0 ratings

2- Maximum numbers of ratings btw 2.5 and 3.4
"""

### find the country names that have 0 rating
final_df[final_df['Rating color'] == 'White'].groupby("Country").size().reset_index()

"""Maximum no rating given is in indian customers"""

## find out which currency is used by which country
final_df[['Country', 'Currency']].value_counts().reset_index()

## which countries have online deliveries options
final_df[final_df['Has Online delivery'] == 'Yes'].Country.value_counts()

"""Only India and UAE have online delivery Options"""

## create pie chart for top 5 cities distributions
city_values = final_df.City.value_counts().values
city_index = final_df.City.value_counts().index

plt.pie(city_values[:5], labels=city_index[:5], autopct="%1.2f%%")

### top 10 cuisines
final_df.Cuisines.value_counts().index[:10]

